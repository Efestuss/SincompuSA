/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Vistas;

import Modelo.ConexionBD;
import Modelo.Excepciones;
import java.awt.Color;
import javax.swing.JOptionPane;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JPasswordField;
import javax.swing.JTextField;

/**
 *
 * @author Angie Buñay
 */
public class Login extends javax.swing.JFrame {

    /**
     * Creates new form Login
     */
    private ConexionBD conexionBD; // Crea una instancia de la clase de conexión

    public Login() {
        initComponents();
        btnIngresar.requestFocusInWindow();
        conexionBD = new ConexionBD(); // Inicializa la instancia de la clase de conexión

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        bgPanel = new javax.swing.JPanel();
        loginPanel = new javax.swing.JPanel();
        txtUsuario = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        txtContrasena = new javax.swing.JPasswordField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        btnIngresar = new javax.swing.JButton();
        lblPass = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        bgPanelDerecha = new javax.swing.JPanel();
        icono = new javax.swing.JLabel();
        jPanelExit = new javax.swing.JPanel();
        lblExit = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        bgPanel.setBackground(new java.awt.Color(255, 255, 255));
        bgPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        loginPanel.setBackground(new java.awt.Color(255, 255, 255));
        loginPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        txtUsuario.setForeground(new java.awt.Color(153, 153, 153));
        txtUsuario.setText("Ingrese su nombre de usuario");
        txtUsuario.setDisabledTextColor(new java.awt.Color(255, 255, 255));
        txtUsuario.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtUsuarioFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtUsuarioFocusLost(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Login");

        txtContrasena.setForeground(new java.awt.Color(153, 153, 153));
        txtContrasena.setText("******");
        txtContrasena.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtContrasenaFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtContrasenaFocusLost(evt);
            }
        });

        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/padlock (1).png"))); // NOI18N

        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/user (3).png"))); // NOI18N

        btnIngresar.setBackground(new java.awt.Color(19, 19, 88));
        btnIngresar.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnIngresar.setForeground(new java.awt.Color(255, 255, 255));
        btnIngresar.setText("Ingresar");
        btnIngresar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnIngresar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIngresarActionPerformed(evt);
            }
        });

        lblPass.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/eye.png"))); // NOI18N
        lblPass.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lblPass.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lblPassMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                lblPassMousePressed(evt);
            }
        });

        javax.swing.GroupLayout loginPanelLayout = new javax.swing.GroupLayout(loginPanel);
        loginPanel.setLayout(loginPanelLayout);
        loginPanelLayout.setHorizontalGroup(
            loginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, loginPanelLayout.createSequentialGroup()
                .addGroup(loginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(loginPanelLayout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnIngresar, javax.swing.GroupLayout.PREFERRED_SIZE, 237, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(loginPanelLayout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addGroup(loginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 20, Short.MAX_VALUE)
                        .addGroup(loginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtUsuario, javax.swing.GroupLayout.DEFAULT_SIZE, 232, Short.MAX_VALUE)
                            .addComponent(txtContrasena))))
                .addGap(9, 9, 9)
                .addComponent(lblPass)
                .addGap(71, 71, 71))
            .addGroup(loginPanelLayout.createSequentialGroup()
                .addGap(147, 147, 147)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        loginPanelLayout.setVerticalGroup(
            loginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(loginPanelLayout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addComponent(jLabel1)
                .addGap(37, 37, 37)
                .addGroup(loginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(loginPanelLayout.createSequentialGroup()
                        .addGroup(loginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(txtUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(35, 35, 35)
                        .addGroup(loginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblPass, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtContrasena, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(52, 52, 52)
                .addComponent(btnIngresar, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(74, Short.MAX_VALUE))
        );

        bgPanel.add(loginPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 170, 430, 400));

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/logo.png"))); // NOI18N
        bgPanel.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 50, -1, -1));

        getContentPane().add(bgPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 460, 600));

        bgPanelDerecha.setBackground(new java.awt.Color(208, 241, 254));
        bgPanelDerecha.setForeground(new java.awt.Color(255, 255, 255));

        icono.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/inventarioInicio.png"))); // NOI18N

        jPanelExit.setBackground(new java.awt.Color(208, 241, 254));
        jPanelExit.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblExit.setBackground(new java.awt.Color(208, 241, 254));
        lblExit.setFont(new java.awt.Font("Rockwell", 1, 18)); // NOI18N
        lblExit.setForeground(new java.awt.Color(51, 51, 51));
        lblExit.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblExit.setText("X");
        lblExit.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lblExit.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        lblExit.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblExitMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lblExitMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lblExitMouseExited(evt);
            }
        });
        jPanelExit.add(lblExit, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 70, 60));

        javax.swing.GroupLayout bgPanelDerechaLayout = new javax.swing.GroupLayout(bgPanelDerecha);
        bgPanelDerecha.setLayout(bgPanelDerechaLayout);
        bgPanelDerechaLayout.setHorizontalGroup(
            bgPanelDerechaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(bgPanelDerechaLayout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addComponent(icono, javax.swing.GroupLayout.PREFERRED_SIZE, 520, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(77, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, bgPanelDerechaLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanelExit, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        bgPanelDerechaLayout.setVerticalGroup(
            bgPanelDerechaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(bgPanelDerechaLayout.createSequentialGroup()
                .addComponent(jPanelExit, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, Short.MAX_VALUE)
                .addComponent(icono, javax.swing.GroupLayout.PREFERRED_SIZE, 477, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(45, Short.MAX_VALUE))
        );

        getContentPane().add(bgPanelDerecha, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 0, 640, 600));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnIngresarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIngresarActionPerformed
        //Manejo de excepciones
        try {
            String nombreUsuario = txtUsuario.getText();
            // Obtener la contraseña del campo de texto
            char[] contrasena = txtContrasena.getPassword();

            // Convertir el arreglo de caracteres a una cadena
            String contrasenaEnCadena = new String(contrasena);

            if (validarAcceso(nombreUsuario, contrasenaEnCadena)) {
                // Acceso válido, abre el formulario correspondiente
            }
        } catch (Excepciones.CredencialesInvalidasException e) {
            JOptionPane.showMessageDialog(null, e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        } catch (Excepciones.UsuarioNoExistenteException e) {
            JOptionPane.showMessageDialog(null, e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        } catch (Excepciones.CuentaBloqueadaException e) {
            JOptionPane.showMessageDialog(null, e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Error al acceder a la base de datos: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        } catch (ClassNotFoundException e) {
            JOptionPane.showMessageDialog(null, "Error al cargar el controlador de la base de datos: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnIngresarActionPerformed

    private void lblExitMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblExitMouseClicked
        System.exit(0);
    }//GEN-LAST:event_lblExitMouseClicked

    private void lblExitMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblExitMouseEntered
        jPanelExit.setBackground(Color.red);
        lblExit.setBackground(Color.white);
        lblExit.setForeground(Color.white);
    }//GEN-LAST:event_lblExitMouseEntered

    private void lblExitMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblExitMouseExited
        jPanelExit.setBackground(new Color(208, 241, 254));
        lblExit.setForeground(new Color(51, 51, 51));

    }//GEN-LAST:event_lblExitMouseExited

    private void lblPassMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblPassMousePressed
        txtContrasena.setEchoChar((char) 0);
    }//GEN-LAST:event_lblPassMousePressed

    private void lblPassMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblPassMouseExited
        txtContrasena.setEchoChar('\u2022');
    }//GEN-LAST:event_lblPassMouseExited

    private void txtUsuarioFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtUsuarioFocusGained
        if (txtUsuario.getText().equals("Ingrese su nombre de usuario")) {
            txtUsuario.setText("");
            txtUsuario.setForeground(new Color(0, 0, 0));
        }
    }//GEN-LAST:event_txtUsuarioFocusGained

    private void txtUsuarioFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtUsuarioFocusLost
        if (txtUsuario.getText().isEmpty()) {
            txtUsuario.setText("Ingrese su nombre de usuario");
            txtUsuario.setForeground(new Color(153, 153, 153));
        }
    }//GEN-LAST:event_txtUsuarioFocusLost

    private void txtContrasenaFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtContrasenaFocusGained
        if (String.valueOf(txtContrasena.getPassword()).equals("******")) {
            // Si el contenido del campo de contraseña es "******", lo borramos para permitir la edición
            txtContrasena.setText("");
            txtContrasena.setForeground(new Color(0, 0, 0)); // Cambiar el color del texto si lo deseas
        }
    }//GEN-LAST:event_txtContrasenaFocusGained

    private void txtContrasenaFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtContrasenaFocusLost
        if (String.valueOf(txtContrasena.getPassword()).isEmpty()) {
            // Si el contenido del campo de contraseña es "******", lo borramos para permitir la edición
            txtContrasena.setText("******");
            txtContrasena.setForeground(new Color(153, 153, 153)); // Cambiar el color del texto si lo deseas
        }
    }//GEN-LAST:event_txtContrasenaFocusLost

    // Contador para realizar seguimiento de los intentos fallidos
    private int intentosFallidos = 0;
    private long bloqueoTiempo = 0; // Tiempo de bloqueo

    // Método para validar el acceso
    public boolean validarAcceso(String nombreUsuario, String contrasenaEnCadena) throws SQLException, ClassNotFoundException, Excepciones.CuentaBloqueadaException, Excepciones.UsuarioNoExistenteException, Excepciones.CredencialesInvalidasException {
        if (bloqueoTiempo > System.currentTimeMillis()) {
            throw new Excepciones.CuentaBloqueadaException("Cuenta bloqueada. Espere un momento antes de intentar nuevamente.");
        }

        String usuario = txtUsuario.getText();
        char[] contrasenaChars = txtContrasena.getPassword();
        String contrasena = new String(contrasenaChars);

        // Verificar que el campo de contraseña esté vacío y que el campo de usuario no sea el texto predeterminado
        if (usuario.equals("Ingrese su nombre de usuario") || contrasena.equals("******")) {
            return false;
        }

        // Verificar si el usuario existe
        if (!existeUsuario(usuario)) {
            throw new Excepciones.UsuarioNoExistenteException("Usuario no existe en el sistema.");
        }

        // Consulta SQL para verificar el usuario y la contraseña en la base de datos
        String sql = "SELECT rol FROM Usuarios WHERE nombreUsuario = ? AND contrasena = ?";
        try {
            conexionBD.openConnection(); // Abrir la conexión a la base de datos
            Connection conn = conexionBD.getConnection();
            PreparedStatement stmt = conn.prepareStatement(sql);
            stmt.setString(1, usuario);
            stmt.setString(2, contrasena);
            ResultSet rs = stmt.executeQuery();

            if (rs.next()) {
                String rol = rs.getString("rol");

                // Reiniciar el contador de intentos fallidos
                intentosFallidos = 0;
                bloqueoTiempo = 0; // Reiniciar el tiempo de bloqueo

                abrirFormulario(usuario, contrasena, rol);
                return true;
            } else {
                // Incrementar el contador de intentos fallidos
                intentosFallidos++;

                if (intentosFallidos >= 3) {
                    bloqueoTiempo = System.currentTimeMillis() + 10000; // Bloquear durante 10 segundos
                    throw new Excepciones.CuentaBloqueadaException("Cuenta bloqueada. Espere un momento antes de intentar nuevamente.");
                } else {
                    throw new Excepciones.CredencialesInvalidasException("Credenciales incorrectas.");
                }
            }
        } catch (SQLException e) {
            throw new SQLException("Error al acceder a la base de datos: " + e.getMessage());
        } finally {
            conexionBD.closeConnection(); // Cerrar la conexión a la base de datos
        }
    }

    // Método para verificar la existencia del usuario
    public boolean existeUsuario(String nombreUsuario) {
        boolean existe = false;
        try {
            conexionBD.openConnection();

            // Crear la sentencia SQL para verificar si el nombre de usuario existe
            String sql = "SELECT COUNT(*) FROM Usuarios WHERE nombreUsuario = ?";
            PreparedStatement statement = conexionBD.getConnection().prepareStatement(sql);
            statement.setString(1, nombreUsuario);

            // Ejecutar la consulta
            ResultSet rs = statement.executeQuery();

            // Verificar si hay filas en el resultado
            if (rs.next()) {
                int count = rs.getInt(1);
                existe = (count > 0);
            }
        } catch (SQLException | ClassNotFoundException e) {
            System.err.println("Error al verificar la existencia del usuario: " + e.getMessage());
            return false;
        } finally {
            try {
                conexionBD.closeConnection();
            } catch (SQLException e) {
                System.err.println("Error al cerrar la conexión: " + e.getMessage());
            }
        }
        return existe;
    }
    // Método para abrir el formulario

    private void abrirFormulario(String usuario, String contrasena, String rol) {
        // Lógica para abrir el formulario basado en el rol del usuario
        if (rol.equals("administrador")) {
            // Abre el formulario de administrador
            frmAdmin admin = new frmAdmin();
            admin.setVisible(true);
            this.dispose(); //Cerrar el formulario actual
        } else if (rol.equals("bodeguero")) {
            // Abre el formulario de bodeguero
            frmBodeguero bodeguero = new frmBodeguero(usuario, contrasena);
            bodeguero.setVisible(true);
            this.dispose(); //Cerrar el formulario actual
        } else {
            JOptionPane.showMessageDialog(null, "Rol no válido.", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }

    public JTextField getTxtUsuario() {
        return txtUsuario;
    }

    public void setTxtUsuario(JTextField txtUsuario) {
        this.txtUsuario = txtUsuario;
    }

    public JPasswordField getTxtContrasena() {
        return txtContrasena;
    }

    public void setTxtContrasena(JPasswordField txtContrasena) {
        this.txtContrasena = txtContrasena;
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Login().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel bgPanel;
    private javax.swing.JPanel bgPanelDerecha;
    private javax.swing.JButton btnIngresar;
    private javax.swing.JLabel icono;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanelExit;
    private javax.swing.JLabel lblExit;
    private javax.swing.JLabel lblPass;
    private javax.swing.JPanel loginPanel;
    private javax.swing.JPasswordField txtContrasena;
    private javax.swing.JTextField txtUsuario;
    // End of variables declaration//GEN-END:variables
}
